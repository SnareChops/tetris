{"version":3,"file":"game.js","sourceRoot":"","sources":["../../src/game.ts"],"names":[],"mappings":"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","sourcesContent":["import { render, html } from 'lit-html';\nimport { Board } from './board';\nimport { Engine } from './engine';\nimport { Menu } from './menu';\n\ninterface Controls {\n  new: HTMLElement;\n  pause: HTMLElement;\n  left: number;\n  right: number;\n  down: number;\n  rotate: number;\n}\n\ninterface Displays {\n  score: HTMLElement;\n  blockCount: HTMLElement;\n}\n\n// prettier-ignore\nconst template = (e: Game) => html`\n  <wrapper>\n    <menu- .game=${e}></menu->\n    <board- .game=${e} rows=\"20\" cols=\"10\"></board->\n  </wrapper>\n`;\n\nconst gameOverTemplate = (e: Game) => html`\n  <splash>\n    <h1>Game Over!</h1>\n    <p><em>Thanks for playing!</em></p>\n    <p>Final Score: ${e.score}</p>\n    <p>Time Played: ${e.time}</p>\n    <p>Number of Blocks: ${e.blockCount}</p>\n  </splash>\n`;\n\nexport class Game extends HTMLElement {\n  public $wrapper: HTMLElement;\n  public $intro: HTMLElement;\n  public controls: Controls;\n  public displays: Displays;\n  public paused: boolean = false;\n  public isGameOver: boolean = false;\n  public score: number = 0;\n  public blockCount: number = 0;\n  public menu: Menu;\n  public board: Board;\n  public engine: Engine;\n  // TODO\n  public time: string;\n\n  constructor(controls: Controls, displays: Displays) {\n    super();\n    this.controls = controls;\n    this.displays = displays;\n\n    document.addEventListener('keydown', (e: KeyboardEvent) => {\n      if (this.board.block == null) return;\n      switch (e.which) {\n        case this.controls.left:\n          this.board.block.moveLeft(this.board);\n          break;\n        case this.controls.right:\n          this.board.block.moveRight(this.board);\n          break;\n        case this.controls.down:\n          this.board.block.moveDown(this.board);\n          break;\n        case this.controls.rotate:\n          this.board.block.rotateRight(this.board);\n          break;\n      }\n    });\n\n    window.addEventListener('dblclick', this.pause.bind(this));\n  }\n\n  public connectedCallback() {\n    render(template(this), this);\n    this.board = this.querySelector<Board>('board-');\n    this.$intro = this.querySelector('intro');\n    this.$wrapper = this.querySelector('wrapper');\n    this.menu = this.querySelector<Menu>('menu-');\n  }\n\n  public addPoints(points: number) {\n    this.score += points;\n    this.displays.score.innerHTML = this.score.toString();\n  }\n\n  public incrementBlockCount() {\n    this.blockCount++;\n    this.displays.blockCount.innerHTML = this.blockCount.toString();\n  }\n\n  public start() {\n    this.isGameOver = false;\n    this.paused = false;\n    this.board.clear();\n    this.score = 0;\n    this.blockCount = 0;\n    this.engine = new Engine(this.board, this);\n    this.engine.start();\n  }\n\n  public pause() {\n    if (!this.isGameOver) {\n      if (this.paused) {\n        this.controls.pause.textContent = 'Pause Game';\n        this.engine.resume();\n        this.paused = false;\n      } else {\n        this.controls.pause.textContent = 'Resume Game';\n        this.engine.pause();\n        this.paused = true;\n      }\n    }\n  }\n\n  public draw() {\n    this.board.draw();\n    this.menu.draw();\n  }\n\n  public gameOver() {\n    this.pause();\n    render(gameOverTemplate(this), this.board.querySelector('.paused'));\n    this.isGameOver = true;\n  }\n}\ncustomElements.define('game-', Game);\n"]}