{"version":3,"file":"block.js","sourceRoot":"","sources":["../../src/block.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point } from './point';\nimport { Shape } from './shape';\nimport { Board } from './board';\nimport { Cell } from './cell';\n\nexport class Block {\n  public shape: Shape;\n  public position: Point;\n  public max: Point;\n  public min: Point;\n\n  public get color(): string {\n    return this.shape.color;\n  }\n\n  constructor(shape: number, x: number, y: number) {\n    this.shape = new Shape(shape);\n    this.position = { x, y };\n    this.max = {\n      x: this.shape.max.x + this.position.x,\n      y: this.shape.max.y + this.position.y\n    };\n    this.min = {\n      x: this.shape.min.x + this.position.x,\n      y: this.shape.min.y + this.position.y\n    };\n  }\n\n  public moveDown(board: Board): boolean {\n    if (this.collision(board, { x: this.position.x, y: this.position.y - 1 }, this.shape.coordinates)) {\n      for (const coord of this.shape.coordinates) {\n        board.blob[coord.y + this.position.y].push(coord.x + this.position.x);\n      }\n      board.block = void 0;\n      return false;\n    }\n    this.position.y--;\n    return true;\n  }\n\n  public moveRight(board: Board): boolean {\n    if (this.collision(board, { x: this.position.x + 1, y: this.position.y }, this.shape.coordinates)) {\n      return false;\n    }\n    this.position.x++;\n    return true;\n  }\n\n  public moveLeft(board: Board): boolean {\n    if (this.collision(board, { x: this.position.x - 1, y: this.position.y }, this.shape.coordinates)) {\n      return false;\n    }\n    this.position.x--;\n    return true;\n  }\n\n  public rotateRight(board: Board): boolean {\n    var midx = Math.floor(this.shape.max.x / 2);\n    var midy = Math.floor(this.shape.max.y / 2);\n    var newCoordinates = [];\n    for (const coord of this.shape.coordinates) {\n      var xdiff = coord.x - midx;\n      var ydiff = coord.y - midy;\n      var result = translateCell(xdiff, ydiff);\n      newCoordinates.push({ x: result.x, y: result.y });\n    }\n    if (this.collision(board, this.position, newCoordinates)) {\n      return false;\n    }\n    this.shape.coordinates = newCoordinates;\n    return true;\n  }\n\n  public draw(board: Board): void {\n    for (const coord of this.shape.coordinates) {\n      var calcx = coord.x + this.position.x;\n      var calcy = coord.y + this.position.y;\n      console.log('color', this.color);\n      board.rows[calcy].cells[calcx].style.backgroundColor = this.color;\n    }\n  }\n\n  public collision(board: Board, position: Point, coordinates: Point[]): boolean {\n    return !coordinates.every(coord => {\n      if (coord.x + position.x < board.bounds.min.x) {\n        console.log('Bottom of board');\n        return false;\n      }\n      if (coord.y + position.y < board.bounds.min.y) {\n        console.log('Left of board');\n        return false;\n      }\n      if (coord.x + position.x > board.bounds.max.x) {\n        console.log('Right of board');\n        return false;\n      }\n      if (coord.y + position.y > board.bounds.max.y) {\n        console.log('Top of board');\n        return false;\n      }\n      for (const row in board.blob) {\n        if (\n          !board.blob[row].every((cell: any) => {\n            const test = coord.x + position.x === cell && coord.y + position.y === parseInt(row);\n            if (test) {\n              return false;\n            }\n            return true;\n          })\n        ) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n}\n\nfunction translateCell(x: number, y: number) {\n  var newx = 0,\n    newy = 0;\n  if (x < 0) {\n    newy = x * -1;\n  } // -x => +y\n  if (y > 0) {\n    newx = y;\n  } // +y => +x\n  if (x > 0) {\n    newy = x * -1;\n  } // +x => -y\n  if (y < 0) {\n    newx = y;\n  } // -y => -x\n  return { x: newx, y: newy };\n}\n"]}