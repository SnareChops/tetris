{"version":3,"file":"engine.js","sourceRoot":"","sources":["../../src/engine.ts"],"names":[],"mappings":"AAIA,IAAI,KAAK,GAAG,CAAC,CAAC;AAEd,MAAM,OAAO,MAAM;IAKjB,YAAmB,KAAY,EAAS,IAAU;QAA/B,UAAK,GAAL,KAAK,CAAO;QAAS,SAAI,GAAJ,IAAI,CAAM;QAJ3C,qBAAgB,GAAW,CAAC,CAAC;QAC7B,UAAK,GAAG,EAAE,CAAC;QACX,WAAM,GAAG,KAAK,CAAC;IAE+B,CAAC;IAE/C,KAAK;QACV,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAGM,IAAI;QAET,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACpD;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK;QACV,QAAQ,CAAC,gBAAgB,CAAO,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC;IACxF,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC7D,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvC;SACF;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;CACF","sourcesContent":["import { Board } from './board';\nimport { Game } from './game';\nimport { Cell } from './cell';\n\nlet count = 0;\n\nexport class Engine {\n  public blockMoveCounter: number = 0;\n  public speed = 60;\n  public paused = false;\n\n  constructor(public board: Board, public game: Game) {}\n\n  public start() {\n    this.blockMoveCounter = 0;\n    window.requestAnimationFrame(this.tick.bind(this));\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n    window.requestAnimationFrame(this.tick.bind(this));\n  }\n\n  // Called every frame\n  public tick() {\n    // All gaming logic handled here\n    this.clear();\n    this.autoBlockMove();\n    this.board.checkBlobRows();\n    this.game.draw();\n    if (!this.paused) {\n      window.requestAnimationFrame(this.tick.bind(this));\n    }\n    console.log('tick', count++);\n  }\n\n  public clear() {\n    document.querySelectorAll<Cell>('cell-').forEach(x => (x.style.background = 'white'));\n  }\n\n  private autoBlockMove() {\n    this.blockMoveCounter++;\n    if (this.blockMoveCounter > (this.speed < 0 ? 0 : this.speed)) {\n      this.blockMoveCounter = 0;\n      if (this.board.block == null) {\n        this.board.newBlock();\n        this.game.incrementBlockCount();\n      } else {\n        this.board.block.moveDown(this.board);\n      }\n    }\n  }\n\n  private increaseSpeed() {\n    this.speed--;\n  }\n}\n"]}