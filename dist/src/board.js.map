{"version":3,"file":"board.js","sourceRoot":"","sources":["../../src/board.ts"],"names":[],"mappings":"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","sourcesContent":["import { Block } from './block';\nimport { Point } from './point';\nimport { Row } from './row';\nimport { Cell } from './cell';\nimport { Game } from './game';\n\ninterface Bounds {\n  max: Point;\n  min: Point;\n}\n\nexport class Board extends HTMLElement {\n  public game: Game;\n\n  public get rowNumber(): number {\n    const rows = this.getAttribute('rows');\n    return !!rows ? +rows : 0;\n  }\n\n  public get colNumber(): number {\n    const cols = this.getAttribute('cols');\n    return !!cols ? +cols : 0;\n  }\n\n  public rows: Row[] = [];\n  public block: Block;\n  public blob: any = {};\n  public bounds: Bounds;\n\n  public connectedCallback() {\n    this.bounds = { max: { x: this.rowNumber - 1, y: this.colNumber - 1 }, min: { x: 0, y: 0 } };\n\n    for (let i = 0; i < this.rowNumber; i++) {\n      this.blob[i] = [];\n      const row = new Row();\n\n      for (let j = 0; j < this.colNumber; j++) {\n        const cell = new Cell();\n        row.append(cell);\n        row.cells.push(cell);\n      }\n      this.append(row);\n      this.rows.push(row);\n    }\n    this.rows = this.rows.reverse();\n  }\n\n  public newBlock() {\n    this.block = new Block(Math.floor(Math.random() * 6), 4, 18);\n    if (this.block.collision(this, { x: 5, y: 18 }, this.block.shape.coordinates)) {\n      this.game.gameOver();\n    }\n  }\n\n  public clear() {\n    this.innerHTML = '';\n  }\n\n  // Called every frame\n  public draw() {\n    if (this.block != null) {\n      this.block.draw(this);\n    }\n    //\n    for (let i = 0; i < this.rows.length; i++) {\n      for (let j = 0; j < this.blob[i].length; j++) {\n        this.rows[i].cells[this.blob[i][j]].style.backgroundColor = 'green';\n      }\n    }\n  }\n\n  public checkBlobRows() {\n    for (let i = 0; i < this.rows.length; i++) {\n      if (this.blob[i].length >= this.rows[i].cells.length) {\n        this.dropRows(i);\n        this.game.addPoints(10);\n      }\n    }\n  }\n\n  public dropRows(start: number) {\n    for (let i = start; i < this.rows.length; i++) {\n      if (i === this.rows.length - 1) {\n        this.blob[i] = [];\n      } else {\n        this.blob[i] = this.blob[i + 1];\n      }\n    }\n  }\n}\ncustomElements.define('board-', Board);\n"]}